name: QuantSR_plus_T_4bitx4
model_type: SwinIRModel
scale: 4
num_gpu: 1
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Set5
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/Set5/HR
    dataroot_lq: /home/datasets/quantsr/Set5/LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

  test_2:  # the 2st test dataset
    name: Set14
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/Set14/HR
    dataroot_lq: /home/datasets/quantsr/Set14/LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

  test_3:  # the 3st test dataset
    name: B100
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/B100/HR
    dataroot_lq: /home/datasets/quantsr/B100/LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

  test_4:  # the 4st test dataset
    name: Urban100
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/Urban100/HR
    dataroot_lq: /home/datasets/quantsr/Urban100/LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

  test_5:  # the 5st test dataset
    name: Manga109
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/Manga109/HR
    dataroot_lq: /home/datasets/quantsr/Manga109/LR_bicubic/X4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk

  test_appendix_visual: 
    name: test_appendix_visual
    type: PairedImageDataset
    dataroot_gt: /home/datasets/quantsr/data_appendix_visual/HR
    dataroot_lq: /home/datasets/quantsr/data_appendix_visual/LR_bicubic/X4
    filename_tmpl: '{}_LRBI_x4'
    io_backend:
      type: disk
      
# network structures
network_g:
  type: QSwinIR_ours
  upscale: 4
  img_size: 64 # 48/64, for fair comparison, we use DIV2K+patch48 when compared with RCAN, etc; DF2K+patch64 when compared with RRDB, etc.
  window_size: 8
  img_range: 1.
  depths: [6,6,6,6,6,6,6,6]
  embed_dim: 60
  num_heads: [6,6,6,6,6,6,6,6]
  mlp_ratio: 2
  upsampler: pixelshuffledirect


# paths
path:
  pretrain_network_g: results/QuantSR_plus_T_4bitx4.pth
  strict_load_g: true


# validation settings
val:
  save_img: true
  suffix: QuantSR_plus_T_x4_4bit
  selfensemble_testing: false
  patchwise_testing: false

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
